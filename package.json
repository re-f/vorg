{
  "name": "vorg",
  "displayName": "VOrg - Org-mode Preview",
  "description": "基础 Org-mode 支持的扩展：实时预览、智能编辑、链接跳转、TODO 管理。在 VS Code 中实现基础的 Org-mode 编辑功能。",
  "version": "0.0.2",
  "publisher": "vorg-dev",
  "license": "MIT",
  "engines": {
    "vscode": "^1.60.0"
  },
  "icon": "icon.png",
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "org-mode",
    "org",
    "emacs",
    "preview",
    "todo",
    "outline",
    "notes",
    "documentation",
    "plain text"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/vorg-dev/vorg"
  },
  "activationEvents": [
    "onLanguage:org",
    "onCommand:vorg.preview",
    "onCommand:vorg.previewToSide",
    "onCommand:vorg.followLink",
    "onCommand:vorg.insertLink",
    "onCommand:vorg.jumpToId",
    "onCommand:vorg.metaReturn",
    "onCommand:vorg.smartReturn",
    "onCommand:vorg.insertTodoHeading",
    "onCommand:vorg.setTodoState",
    "onCommand:vorg.smartTab",
    "onCommand:vorg.smartShiftTab",
    "onCommand:vorg.debug.refreshHighlighting"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "VOrg",
      "properties": {
        "vorg.todoKeywords": {
          "type": "string",
          "default": "TODO(t) NEXT(n) WAITING(w) | DONE(d) CANCELLED(c)",
          "description": "TODO状态关键字配置，格式类似Org-mode。'|'前为未完成状态，'|'后为已完成状态。支持状态转换记录，如 TODO(@/!) 表示状态切换时记录时间戳和备注。",
          "markdownDescription": "TODO状态关键字配置，格式类似Org-mode。\n\n- `|` 前为未完成状态，`|` 后为已完成状态\n- 支持状态转换记录：`@` 表示记录时间戳，`!` 表示需要备注\n- 示例：`\"PreSale InDelivery HANGUP(@/!) End(@/!) | Terminated(@/!) DONE(@/!)\"`"
        },
        "vorg.defaultTodoKeyword": {
          "type": "string",
          "default": "TODO",
          "description": "默认插入的TODO关键字，必须是todoKeywords配置中定义的关键字之一"
        }
      }
    },
    "languages": [
      {
        "id": "org",
        "aliases": [
          "Org",
          "org-mode"
        ],
        "extensions": [
          ".org"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "org",
        "scopeName": "source.org",
        "path": "./syntaxes/org.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "vorg.preview",
        "title": "VOrg: Open Preview",
        "icon": "$(preview)"
      },
      {
        "command": "vorg.previewToSide",
        "title": "VOrg: Open Preview to the Side",
        "icon": "$(open-preview)"
      },
      {
        "command": "vorg.followLink",
        "title": "VOrg: Follow Link",
        "icon": "$(link-external)"
      },
      {
        "command": "vorg.insertLink",
        "title": "VOrg: Insert Link",
        "icon": "$(link)"
      },
      {
        "command": "vorg.debug.refreshHighlighting",
        "title": "VOrg: Debug - Refresh Highlighting",
        "icon": "$(refresh)"
      },
      {
        "command": "vorg.metaReturn",
        "title": "VOrg: Insert New Item (Meta Return)",
        "icon": "$(add)"
      },
      {
        "command": "vorg.smartReturn",
        "title": "VOrg: Insert New Item at End (Smart Return)",
        "icon": "$(insert)"
      },
      {
        "command": "vorg.insertTodoHeading",
        "title": "VOrg: Insert TODO Heading",
        "icon": "$(tasklist)"
      },
      {
        "command": "vorg.setTodoState",
        "title": "VOrg: Set TODO State",
        "icon": "$(checklist)"
      },
      {
        "command": "vorg.smartTab",
        "title": "VOrg: Smart Tab (Intelligent Indentation)",
        "icon": "$(indent)"
      },
      {
        "command": "vorg.smartShiftTab",
        "title": "VOrg: Smart Shift+Tab (Reverse Indentation)",
        "icon": "$(outdent)"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "editorLangId == org",
          "command": "vorg.preview",
          "group": "navigation"
        },
        {
          "when": "editorLangId == org",
          "command": "vorg.previewToSide",
          "group": "navigation"
        },
        {
          "when": "editorLangId == org",
          "command": "vorg.followLink",
          "group": "navigation"
        },
        {
          "when": "editorLangId == org",
          "command": "vorg.insertLink",
          "group": "navigation"
        }
      ]
    },
    "keybindings": [
      {
        "command": "vorg.previewToSide",
        "key": "ctrl+c ctrl+e",
        "mac": "ctrl+c ctrl+e",
        "when": "editorLangId == org"
      },
      {
        "command": "vorg.followLink",
        "key": "ctrl+c ctrl+o",
        "mac": "ctrl+c ctrl+o",
        "when": "editorLangId == org"
      },
      {
        "command": "vorg.insertLink",
        "key": "ctrl+c ctrl+l",
        "mac": "ctrl+c ctrl+l",
        "when": "editorLangId == org"
      },
      {
        "command": "vorg.metaReturn",
        "key": "alt+enter",
        "mac": "alt+enter",
        "when": "editorLangId == org"
      },
      {
        "command": "vorg.smartReturn",
        "key": "ctrl+alt+enter",
        "mac": "ctrl+alt+enter",
        "when": "editorLangId == org"
      },
      {
        "command": "vorg.insertTodoHeading",
        "key": "shift+alt+enter",
        "mac": "shift+alt+enter",
        "when": "editorLangId == org"
      },
      {
        "command": "vorg.setTodoState",
        "key": "ctrl+c ctrl+t",
        "mac": "ctrl+c ctrl+t",
        "when": "editorLangId == org"
      },
      {
        "command": "vorg.smartTab",
        "key": "tab",
        "mac": "tab",
        "when": "editorLangId == org"
      },
      {
        "command": "vorg.smartShiftTab",
        "key": "shift+tab",
        "mac": "shift+tab",
        "when": "editorLangId == org"
      },
      {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "ctrl+c ctrl+x ctrl+b",
        "mac": "ctrl+c ctrl+x ctrl+b",
        "when": "editorLangId == org"
      },
      {
        "command": "editor.action.addCommentLine",
        "key": "ctrl+c ctrl+;",
        "mac": "ctrl+c ctrl+;",
        "when": "editorLangId == org"
      },
      {
        "command": "editor.fold",
        "key": "ctrl+c ctrl+tab",
        "mac": "ctrl+c ctrl+tab",
        "when": "editorLangId == org"
      },
      {
        "command": "editor.unfold",
        "key": "ctrl+c ctrl+shift+tab",
        "mac": "ctrl+c ctrl+shift+tab",
        "when": "editorLangId == org"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "test:unit": "npm run compile && node ./out/test/unit/unitTestRunner.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.60.0",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "14.x",
    "eslint": "^7.27.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "glob": "^7.1.7",
    "mocha": "^8.4.0",
    "typescript": "^4.3.2",
    "vscode-test": "^1.5.2"
  },
  "dependencies": {
    "uniorg": "^1.3.0",
    "uniorg-parse": "^3.2.0",
    "uniorg-rehype": "^2.2.0",
    "rehype-stringify": "^9.0.3"
  }
} 