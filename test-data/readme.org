#+TITLE: VOrg 测试数据集
#+AUTHOR: VOrg 测试团队
#+DATE: 2024-01-01
#+STARTUP: overview
#+OPTIONS: toc:2

这个目录包含了 VOrg 扩展的完整测试数据，用于验证所有功能的正确性。

* 📋 测试文件概览

** 🎯 核心功能测试
- *main.org* - VOrg 功能完整测试套件主文件
  - 🔗 链接跳转功能（内部、外部、跨文件）
  - 🌈 智能语法高亮
  - 📋 文档大纲导航
  - ⚡ 智能编辑命令 (Meta-Return)
  - 🔄 智能TAB折叠
  - 🎨 主题自适应
  - 📱 实时预览与滚动同步

** 🌈 语法高亮测试
- *syntax-test.org* - 语法高亮完全测试套件
  - 🎯 所有TODO状态（TODO、DONE、NEXT、WAITING、CANCELLED）
  - 📝 文本格式化（粗体、斜体、下划线、删除线、代码、等宽）
  - 📅 时间戳和日期格式
  - 🏷️ 标签和属性
  - 💻 代码块语法高亮（多种编程语言）
  - 📊 表格和列表
  - 🔗 各种链接格式
  - 📐 数学公式
  - 💬 注释和分隔线

** ⚡ 编辑功能测试
- *editing-test.org* - 智能编辑功能测试
  - Meta-Return 功能（Alt+Enter）
  - 智能插入新元素（标题、列表项、表格行）
  - 上下文感知编辑

** 🔄 TAB 功能测试
- *tab-test.org* - TAB 键智能折叠测试
  - 标题折叠/展开
  - 列表智能处理（折叠 vs 缩进）
  - 表格导航
  - 代码块折叠

** 📋 列表折叠测试
- *list-folding-test.org* - 专门测试列表项折叠功能
  - 有子项列表的折叠行为
  - 无子项列表的缩进行为
  - Shift+TAB 反向缩进

** 🔗 链接功能测试
- *link-debug.org* - 链接调试测试（简单测试）
- *跨文件链接网络*：
  - =projects.org= - 项目管理文档
  - =notes.org= - 开发笔记
  - =subdir/deep.org= - 深层目录测试文件

* 🚀 测试使用方法

** 1. 基本功能测试
#+BEGIN_SRC bash
# 打开主测试文件
code main.org

# 按照以下步骤测试：
# 1. Ctrl+Shift+V 打开预览
# 2. Ctrl+K V 并排预览
# 3. 测试各种链接跳转
# 4. 测试 Alt+Enter 编辑命令
# 5. 测试 TAB 智能折叠
#+END_SRC

** 2. 语法高亮测试
#+BEGIN_SRC bash
# 打开语法测试文件
code syntax-test.org

# 检查以下项目的高亮效果：
# - TODO 关键词颜色
# - 文本格式化
# - 时间戳格式
# - 代码块语法高亮
# - 数学公式显示
#+END_SRC

** 3. 链接跳转测试
#+BEGIN_SRC bash
# 测试跨文件链接
# 1. 在 main.org 中点击链接跳转到其他文件
# 2. 测试 ID 链接的全局搜索功能
# 3. 测试外部链接在浏览器中打开
#+END_SRC

* 📊 测试覆盖范围

** ✅ 已实现并测试的功能
- [X] 实时预览和滚动同步
- [X] 主题自适应（明暗主题切换）
- [X] 完整语法高亮（包括所有 TODO 状态）
- [X] 文档大纲导航
- [X] 链接跳转（内部、外部、跨文件、ID链接）
- [X] 智能编辑命令（Meta-Return）
- [X] 智能 TAB 折叠
- [X] 文本格式化（粗体、斜体、下划线等）
- [X] 代码块语法高亮（多种语言）
- [X] 表格支持
- [X] 列表支持（有序、无序、任务列表）
- [X] 时间戳和日期格式
- [X] 标签和属性
- [X] 数学公式支持
- [X] 特殊块类型（引用、示例、诗歌等）
- [X] 注释和分隔线

** 🔄 计划中的功能测试
- [ ] 导出功能（PDF、HTML、Word）
- [ ] 图表支持（Mermaid、PlantUML）
- [ ] org-babel 支持
- [ ] 工作区元数据缓存

* 📝 测试指南

** 预览功能测试
1. *实时预览*：编辑文档时观察预览窗口实时更新
2. *滚动同步*：在编辑器中滚动，检查预览窗口是否同步
3. *主题适配*：切换 VS Code 主题，观察预览窗口颜色变化

** 语法高亮测试
1. *TODO 状态*：检查 TODO、DONE、NEXT、WAITING、CANCELLED 的不同颜色
2. *文本格式*：验证粗体、斜体、下划线等格式的高亮
3. *代码块*：测试不同编程语言的语法高亮
4. *时间戳*：验证各种时间格式的高亮显示

** 链接功能测试
1. *内部链接*：测试 =[[*heading]]= 格式的标题链接
2. *ID 链接*：测试 =[[id:UUID]]= 格式的全局链接
3. *文件链接*：测试跨文件跳转功能
4. *外部链接*：验证 HTTP 链接在浏览器中打开

** 编辑功能测试
1. *Meta-Return*：在不同上下文中测试 Alt+Enter 功能
2. *TAB 智能折叠*：测试标题、列表、代码块的折叠行为
3. *表格导航*：在表格中测试 TAB 键导航

** 大纲导航测试
1. *大纲面板*：检查侧边栏 Outline 面板的内容
2. *快速跳转*：使用 Ctrl+Shift+O 快速跳转功能
3. *标题折叠*：测试标题的折叠/展开功能

* 🐛 问题反馈

如果在测试过程中发现问题，请记录以下信息：
- 使用的测试文件
- 执行的操作步骤
- 预期行为 vs 实际行为
- VS Code 版本和 VOrg 扩展版本
- 操作系统信息

* 📈 测试结果记录

可以在测试文件末尾的"测试结果记录"部分记录测试结果：

#+BEGIN_SRC org
* 测试结果记录

** 功能测试结果 [2024-01-01]
- [X] 实时预览功能正常
- [X] 链接跳转功能正常
- [ ] 发现的问题：xxx
#+END_SRC

---

/这个测试数据集确保 VOrg 扩展的所有功能都能得到充分验证！/ 🎉 